/*
 * This file is generated by jOOQ.
 */
package example.account.database.generated.tables.daos


import example.account.database.generated.tables.AccountHolder
import example.account.database.generated.tables.records.AccountHolderRecord

import kotlin.collections.List

import org.jooq.Configuration
import org.jooq.impl.DAOImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class AccountHolderDao(configuration: Configuration?) : DAOImpl<AccountHolderRecord, example.account.database.generated.tables.pojos.AccountHolder, Long>(AccountHolder.ACCOUNT_HOLDER, example.account.database.generated.tables.pojos.AccountHolder::class.java, configuration) {

    /**
     * Create a new AccountHolderDao without any configuration
     */
    constructor(): this(null)

    override fun getId(o: example.account.database.generated.tables.pojos.AccountHolder): Long? = o.id

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    fun fetchRangeOfId(lowerInclusive: Long?, upperInclusive: Long?): List<example.account.database.generated.tables.pojos.AccountHolder> = fetchRange(AccountHolder.ACCOUNT_HOLDER.ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    fun fetchById(vararg values: Long): List<example.account.database.generated.tables.pojos.AccountHolder> = fetch(AccountHolder.ACCOUNT_HOLDER.ID, *values.toTypedArray())

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    fun fetchOneById(value: Long): example.account.database.generated.tables.pojos.AccountHolder? = fetchOne(AccountHolder.ACCOUNT_HOLDER.ID, value)

    /**
     * Fetch records that have <code>first_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    fun fetchRangeOfFirstName(lowerInclusive: String?, upperInclusive: String?): List<example.account.database.generated.tables.pojos.AccountHolder> = fetchRange(AccountHolder.ACCOUNT_HOLDER.FIRST_NAME, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>first_name IN (values)</code>
     */
    fun fetchByFirstName(vararg values: String): List<example.account.database.generated.tables.pojos.AccountHolder> = fetch(AccountHolder.ACCOUNT_HOLDER.FIRST_NAME, *values)

    /**
     * Fetch records that have <code>last_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    fun fetchRangeOfLastName(lowerInclusive: String?, upperInclusive: String?): List<example.account.database.generated.tables.pojos.AccountHolder> = fetchRange(AccountHolder.ACCOUNT_HOLDER.LAST_NAME, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>last_name IN (values)</code>
     */
    fun fetchByLastName(vararg values: String): List<example.account.database.generated.tables.pojos.AccountHolder> = fetch(AccountHolder.ACCOUNT_HOLDER.LAST_NAME, *values)
}
